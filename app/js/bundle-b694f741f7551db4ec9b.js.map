{"version":3,"file":"app/js/bundle-b694f741f7551db4ec9b.js","mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA,IAAI,CAACC,SAAS,GAAG,UAAUC,KAAK,EAAE;EAChC,IAAAC,WAAA,GAAmCD,KAAK,CAACE,IAAI;IAArCC,eAAe,GAAAF,WAAA,CAAfE,eAAe;IAAEC,KAAK,GAAAH,WAAA,CAALG,KAAK;;EAE9B;EACAC,UAAU,CAAC,YAAM;IACfP,IAAI,CAACQ,WAAW,CAAC;MAAEH,eAAe,EAAfA;IAAgB,CAAC,CAAC;EACvC,CAAC,EAAEC,KAAK,CAAC;AACX,CAAC,C","sources":["webpack://kyo-web-online/./src/app/workers/class-scheduler.worker.js"],"sourcesContent":["/**\n * Class Scheduler Worker\n *\n * @description\n * This worker script handles scheduling tasks by processing messages from the main thread.\n * It simulates a delay based on the provided `start` time and returns the `class_scheduled`\n * back to the main thread. If required attributes are missing, an error message is sent.\n *\n * Message Protocol:\n * - Incoming Message: `{ class_scheduled: string, start: number }`\n * - Outgoing Messages:\n *   - Success: `{ class_scheduled: string }`\n *   - Error: `{ error: string }`\n *\n * Usage:\n * The main thread should instantiate this worker and post messages containing the\n * required attributes: `class-scheduled` (name of the class to schedule) and\n * `start` (delay in milliseconds).\n *\n * @author Cristian Moreno (Kyonax)\n * @contact iamkyo@kyo.wtf\n * @since 2025-01-15\n *\n * @note\n * Ensure the main thread validates the data structure before posting messages to this worker\n * to minimize unnecessary error handling within the worker.\n */\n\n// Handle messages from the main thread\nself.onmessage = function (event) {\n  const { class_scheduled, start } = event.data;\n\n  // Simulate scheduling delay\n  setTimeout(() => {\n    self.postMessage({ class_scheduled });\n  }, start);\n};\n"],"names":["self","onmessage","event","_event$data","data","class_scheduled","start","setTimeout","postMessage"],"sourceRoot":""}